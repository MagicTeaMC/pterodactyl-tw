!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.stringSimilarity=e():t.stringSimilarity=e()}(self,(function(){return t={138:t=>{function e(t,e){if(t=t.replace(/\s+/g,""),e=e.replace(/\s+/g,""),!t.length&&!e.length)return 1;if(!t.length||!e.length)return 0;if(t===e)return 1;if(1===t.length&&1===e.length)return 0;if(t.length<2||e.length<2)return 0;let n=new Map;for(let e=0;e<t.length-1;e++){const r=t.substring(e,e+2),o=n.has(r)?n.get(r)+1:1;n.set(r,o)}let r=0;for(let t=0;t<e.length-1;t++){const o=e.substring(t,t+2),s=n.has(o)?n.get(o):0;s>0&&(n.set(o,s-1),r++)}return 2*r/(t.length+e.length-2)}t.exports={compareTwoStrings:e,findBestMatch:function(t,n){if(!function(t,e){return"string"==typeof t&&!!Array.isArray(e)&&!!e.length&&!e.find((function(t){return"string"!=typeof t}))}(t,n))throw new Error("Bad arguments: First argument should be a string, second should be an array of strings");const r=[];let o=0;for(let s=0;s<n.length;s++){const i=n[s],g=e(t,i);r.push({target:i,rating:g}),g>r[o].rating&&(o=s)}return{ratings:r,bestMatch:r[o],bestMatchIndex:o}}}}},e={},function n(r){if(e[r])return e[r].exports;var o=e[r]={exports:{}};return t[r](o,o.exports,n),o.exports}(138);var t,e}));