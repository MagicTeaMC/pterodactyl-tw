"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"types.js","sourceRoot":"","sources":["../lib/types.ts"],"names":[],"mappings":"","sourcesContent":["/** Essentials */\n// https://devblogs.microsoft.com/typescript/announcing-typescript-2-9-2/#support-for-symbols-and-numeric-literals-in-keyof-and-mapped-object-types\nexport type KeyofBase = keyof any;\nexport type Primitive = string | number | boolean | bigint | symbol | undefined | null;\nexport type Builtin = Primitive | Function | Date | Error | RegExp;\nexport type IsTuple<T> = T extends any[] ? (any[] extends T ? never : T) : never;\ntype AnyRecord<T = any> = Record<KeyofBase, T>;\n// https://stackoverflow.com/questions/49927523/disallow-call-with-any/49928360#49928360\nexport type IsAny<T> = 0 extends 1 & T ? true : false;\nexport type IsNever<T> = [T] extends [never] ? true : false;\nexport type IsUnknown<T> = IsAny<T> extends true ? false : unknown extends T ? true : false;\nexport type AnyArray<T = any> = Array<T> | ReadonlyArray<T>;\n\nexport type ArrayOrSingle<T> = T | T[];\n\ntype NonUndefinable<T> = T extends undefined ? never : T;\n\n/**\n * Like Record, but can be used with only one argument.\n * Useful, if you want to make sure that all of the keys of a finite type are used.\n */\nexport type Dictionary<T, K extends KeyofBase = string> = { [key in K]: T };\n/** Given Dictionary<T> returns T */\nexport type DictionaryValues<T> = T[keyof T];\n/**\n * Like Dictionary, but:\n *  - ensures type safety of index access\n *  - does not enforce key exhaustiveness\n */\nexport type SafeDictionary<T, K extends KeyofBase = string> = { [key in K]?: T };\n\n/** Like Partial but recursive */\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Map<infer K, infer V>\n  ? Map<DeepPartial<K>, DeepPartial<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? ReadonlyMap<DeepPartial<K>, DeepPartial<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepPartial<K>, DeepPartial<V>>\n  : T extends Set<infer U>\n  ? Set<DeepPartial<U>>\n  : T extends ReadonlySet<infer U>\n  ? ReadonlySet<DeepPartial<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepPartial<U>>\n  : T extends Array<infer U>\n  ? T extends IsTuple<T>\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Array<DeepPartial<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : IsUnknown<T> extends true\n  ? unknown\n  : Partial<T>;\n\n/** Recursive nullable */\nexport type DeepNullable<T> = T extends Builtin\n  ? T | null\n  : T extends Map<infer K, infer V>\n  ? Map<DeepNullable<K>, DeepNullable<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? ReadonlyMap<DeepNullable<K>, DeepNullable<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepNullable<K>, DeepNullable<V>>\n  : T extends Set<infer U>\n  ? Set<DeepNullable<U>>\n  : T extends ReadonlySet<infer U>\n  ? ReadonlySet<DeepNullable<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepNullable<U>>\n  : T extends Array<infer U>\n  ? T extends IsTuple<T>\n    ? { [K in keyof T]: DeepNullable<T[K]> | null }\n    : Array<DeepNullable<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepNullable<U>>\n  : T extends {}\n  ? { [K in keyof T]: DeepNullable<T[K]> }\n  : T | null;\n\n/** Recursive undefinable */\nexport type DeepUndefinable<T> = T extends Builtin\n  ? T | undefined\n  : T extends Map<infer K, infer V>\n  ? Map<DeepUndefinable<K>, DeepUndefinable<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? ReadonlyMap<DeepUndefinable<K>, DeepUndefinable<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepUndefinable<K>, DeepUndefinable<V>>\n  : T extends Set<infer U>\n  ? Set<DeepUndefinable<U>>\n  : T extends ReadonlySet<infer U>\n  ? ReadonlySet<DeepUndefinable<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepUndefinable<U>>\n  : T extends Array<infer U>\n  ? T extends IsTuple<T>\n    ? { [K in keyof T]: DeepUndefinable<T[K]> | undefined }\n    : Array<DeepUndefinable<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepUndefinable<U>>\n  : T extends {}\n  ? { [K in keyof T]: DeepUndefinable<T[K]> }\n  : T | undefined;\n\n/** Like NonNullable but recursive */\nexport type DeepNonNullable<T> = T extends Builtin\n  ? NonNullable<T>\n  : T extends Map<infer K, infer V>\n  ? Map<DeepNonNullable<K>, DeepNonNullable<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? ReadonlyMap<DeepNonNullable<K>, DeepNonNullable<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepNonNullable<K>, DeepNonNullable<V>>\n  : T extends Set<infer U>\n  ? Set<DeepNonNullable<U>>\n  : T extends ReadonlySet<infer U>\n  ? ReadonlySet<DeepNonNullable<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepNonNullable<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepNonNullable<U>>\n  : T extends {}\n  ? { [K in keyof T]: DeepNonNullable<T[K]> }\n  : NonNullable<T>;\n\n/** Like Required but recursive */\nexport type DeepRequired<T> = T extends Error\n  ? Required<T>\n  : T extends Builtin\n  ? T\n  : T extends Map<infer K, infer V>\n  ? Map<DeepRequired<K>, DeepRequired<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? ReadonlyMap<DeepRequired<K>, DeepRequired<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepRequired<K>, DeepRequired<V>>\n  : T extends Set<infer U>\n  ? Set<DeepRequired<U>>\n  : T extends ReadonlySet<infer U>\n  ? ReadonlySet<DeepRequired<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepRequired<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepRequired<U>>\n  : T extends {}\n  ? { [K in keyof T]-?: DeepRequired<T[K]> }\n  : Required<T>;\n\n/** Like Readonly but recursive */\nexport type DeepReadonly<T> = T extends Builtin\n  ? T\n  : T extends Map<infer K, infer V>\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\n  : T extends Set<infer U>\n  ? ReadonlySet<DeepReadonly<U>>\n  : T extends ReadonlySet<infer U>\n  ? ReadonlySet<DeepReadonly<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepReadonly<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepReadonly<U>>\n  : T extends {}\n  ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\n  : IsUnknown<T> extends true\n  ? unknown\n  : Readonly<T>;\n\n/** Make readonly object writable */\nexport type Writable<T> = { -readonly [P in keyof T]: T[P] };\n\n/** Like Writable but recursive */\nexport type DeepWritable<T> = T extends Builtin\n  ? T\n  : T extends Map<infer K, infer V>\n  ? Map<DeepWritable<K>, DeepWritable<V>>\n  : T extends ReadonlyMap<infer K, infer V>\n  ? Map<DeepWritable<K>, DeepWritable<V>>\n  : T extends WeakMap<infer K, infer V>\n  ? WeakMap<DeepWritable<K>, DeepWritable<V>>\n  : T extends Set<infer U>\n  ? Set<DeepWritable<U>>\n  : T extends ReadonlySet<infer U>\n  ? Set<DeepWritable<U>>\n  : T extends WeakSet<infer U>\n  ? WeakSet<DeepWritable<U>>\n  : T extends Promise<infer U>\n  ? Promise<DeepWritable<U>>\n  : T extends {}\n  ? { -readonly [K in keyof T]: DeepWritable<T[K]> }\n  : T;\n\n/** Combination of DeepPartial and DeepWritable */\nexport type Buildable<T> = DeepPartial<DeepWritable<T>>;\n\n/** Similar to the builtin Omit, but checks the filter strictly. */\nexport type StrictOmit<T extends AnyRecord, K extends keyof T> = T extends AnyArray ? never : Omit<T, K>;\n\n/** Similar to the builtin Extract, but checks the filter strictly */\nexport type StrictExtract<T, U extends Partial<T>> = Extract<T, U>;\n\ntype PickKeysByValue<T, V> = { [K in keyof T]: T[K] extends V ? K : never }[keyof T];\n\n/** Omit all properties of given type in object type */\nexport type OmitProperties<T, P> = Omit<T, PickKeysByValue<T, P>>;\n\n/** Pick all properties of given type in object type */\nexport type PickProperties<T, P> = Pick<T, PickKeysByValue<T, P>>;\n\n/** Gets keys of an object which are optional */\nexport type OptionalKeys<T> = T extends unknown\n  ? {\n      [K in keyof T]-?: undefined extends { [K2 in keyof T]: K2 }[K] ? K : never;\n    }[keyof T]\n  : never;\n\n/** Gets keys of an object which are required */\nexport type RequiredKeys<T> = T extends unknown ? Exclude<keyof T, OptionalKeys<T>> : never;\n\n/** Gets keys of properties of given type in object type */\nexport type PickKeys<T, P> = Exclude<keyof PickProperties<T, P>, undefined>;\n\n/** Recursively omit deep properties */\nexport type DeepOmit<T, Filter extends DeepModify<T>> = T extends Builtin\n  ? T\n  : T extends Map<infer KeyType, infer ValueType>\n  ? Filter extends Map<KeyType, infer FilterValueType>\n    ? FilterValueType extends DeepModify<ValueType>\n      ? Map<KeyType, DeepOmit<ValueType, FilterValueType>>\n      : T\n    : T\n  : T extends ReadonlyMap<infer KeyType, infer ValueType>\n  ? Filter extends ReadonlyMap<KeyType, infer FilterValueType>\n    ? FilterValueType extends DeepModify<ValueType>\n      ? ReadonlyMap<KeyType, DeepOmit<ValueType, FilterValueType>>\n      : T\n    : T\n  : T extends WeakMap<infer KeyType, infer ValueType>\n  ? Filter extends WeakMap<KeyType, infer FilterValueType>\n    ? FilterValueType extends DeepModify<ValueType>\n      ? WeakMap<KeyType, DeepOmit<ValueType, FilterValueType>>\n      : T\n    : T\n  : T extends Set<infer ItemType>\n  ? Filter extends Set<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? Set<DeepOmit<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends ReadonlySet<infer ItemType>\n  ? Filter extends ReadonlySet<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? ReadonlySet<DeepOmit<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends WeakSet<infer ItemType>\n  ? Filter extends WeakSet<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? WeakSet<DeepOmit<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends Array<infer ItemType>\n  ? Filter extends Array<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? Array<DeepOmit<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends Promise<infer ItemType>\n  ? Filter extends Promise<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? Promise<DeepOmit<ItemType, FilterItemType>>\n      : T\n    : T\n  : Filter extends AnyRecord\n  ? {\n      [K in keyof T as K extends keyof Filter ? (Filter[K] extends true ? never : K) : K]: K extends keyof Filter\n        ? Filter[K] extends DeepModify<T[K]>\n          ? DeepOmit<T[K], Filter[K]>\n          : T[K]\n        : T[K];\n    }\n  : never;\n\n/** Recursively pick deep properties */\nexport type DeepPick<T, Filter extends DeepModify<T>> = T extends Builtin\n  ? T\n  : T extends Map<infer KeyType, infer ValueType>\n  ? Filter extends Map<KeyType, infer FilterValueType>\n    ? FilterValueType extends DeepModify<ValueType>\n      ? Map<KeyType, DeepPick<ValueType, FilterValueType>>\n      : T\n    : T\n  : T extends ReadonlyMap<infer KeyType, infer ValueType>\n  ? Filter extends ReadonlyMap<KeyType, infer FilterValueType>\n    ? FilterValueType extends DeepModify<ValueType>\n      ? ReadonlyMap<KeyType, DeepPick<ValueType, FilterValueType>>\n      : T\n    : T\n  : T extends WeakMap<infer KeyType, infer ValueType>\n  ? Filter extends WeakMap<KeyType, infer FilterValueType>\n    ? FilterValueType extends DeepModify<ValueType>\n      ? WeakMap<KeyType, DeepPick<ValueType, FilterValueType>>\n      : T\n    : T\n  : T extends Set<infer ItemType>\n  ? Filter extends Set<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? Set<DeepPick<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends ReadonlySet<infer ItemType>\n  ? Filter extends ReadonlySet<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? ReadonlySet<DeepPick<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends WeakSet<infer ItemType>\n  ? Filter extends WeakSet<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? WeakSet<DeepPick<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends Array<infer ItemType>\n  ? Filter extends Array<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? Array<DeepPick<ItemType, FilterItemType>>\n      : T\n    : T\n  : T extends Promise<infer ItemType>\n  ? Filter extends Promise<infer FilterItemType>\n    ? FilterItemType extends DeepModify<ItemType>\n      ? Promise<DeepPick<ItemType, FilterItemType>>\n      : T\n    : T\n  : Filter extends AnyRecord\n  ? {\n      // iterate over keys of T, which keeps the information about keys: optional, required or readonly\n      [K in keyof T as K extends keyof Filter ? K : never]: Filter[K & keyof Filter] extends true\n        ? T[K]\n        : K extends keyof Filter\n        ? Filter[K] extends DeepModify<T[K]>\n          ? DeepPick<T[K], Filter[K]>\n          : never\n        : never;\n    }\n  : never;\n\ntype DeepModify<T> =\n  | (T extends AnyRecord\n      ? {\n          [K in keyof T]?: undefined extends { [K2 in keyof T]: K2 }[K]\n            ? NonUndefinable<T[K]> extends object\n              ? true | DeepModify<NonUndefinable<T[K]>>\n              : true\n            : T[K] extends object\n            ? true | DeepModify<T[K]>\n            : true;\n        }\n      : never)\n  | (T extends Array<infer E> ? Array<DeepModify<E>> : never)\n  | (T extends Promise<infer E> ? Promise<DeepModify<E>> : never)\n  | (T extends Set<infer E> ? Set<DeepModify<E>> : never)\n  | (T extends ReadonlySet<infer E> ? ReadonlySet<DeepModify<E>> : never)\n  | (T extends WeakSet<infer E> ? WeakSet<DeepModify<E>> : never)\n  | (T extends Map<infer K, infer E> ? Map<K, DeepModify<E>> : never)\n  | (T extends ReadonlyMap<infer K, infer E> ? ReadonlyMap<K, DeepModify<E>> : never)\n  | (T extends WeakMap<infer K, infer E> ? WeakMap<K, DeepModify<E>> : never);\n\n/** Remove keys with `never` value from object type */\nexport type NonNever<T extends {}> = Pick<T, { [K in keyof T]: T[K] extends never ? never : K }[keyof T]>;\n\nexport type NonEmptyObject<T extends {}> = keyof T extends never ? never : T;\n\n/** Merge 2 types, properties types from the latter override the ones defined on the former type */\nexport type Merge<M, N> = Omit<M, keyof N> & N;\n\ntype _MergeN<T extends readonly any[], Result> = T extends readonly [infer Head, ...infer Tail]\n  ? _MergeN<Tail, Merge<Result, Head>>\n  : Result;\n\n/** Merge N types, properties types from the latter override the ones defined on the former type */\nexport type MergeN<T extends readonly any[]> = _MergeN<T, {}>;\n\n/** Mark some properties as required, leaving others unchanged */\nexport type MarkRequired<T, RK extends keyof T> = Exclude<T, RK> & Required<Pick<T, RK>>;\n\n/** Mark some properties as optional, leaving others unchanged */\nexport type MarkOptional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\n/** Convert union type to intersection #darkmagic */\nexport type UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never;\n\ntype StringLiteral<T> = T extends string ? (string extends T ? never : T) : never;\n\ndeclare const __OPAQUE_TYPE__: unique symbol;\n\n/** Easily create opaque types ie. types that are subset of their original types (ex: positive numbers, uppercased string) */\nexport type Opaque<Type, Token extends string> = Token extends StringLiteral<Token>\n  ? Type & { readonly [__OPAQUE_TYPE__]: Token }\n  : never;\n\n/** Easily extract the type of a given object's values */\nexport type ValueOf<T> = T[keyof T];\n\n/** Easily extract the type of a given array's elements */\nexport type ElementOf<T extends readonly any[]> = T extends readonly (infer ET)[] ? ET : never;\n\n/** Type constraint for tuple inference */\nexport type Tuple<T = any> = [T] | T[];\n\n/** Useful as a return type in interfaces or abstract classes with missing implementation */\nexport type AsyncOrSync<T> = PromiseLike<T> | T;\n\nexport type Awaited<T> = T extends PromiseLike<infer PT> ? PT : never;\nexport type AsyncOrSyncType<T> = T extends AsyncOrSync<infer PT> ? PT : never;\n\nexport interface Newable<T> {\n  new (...args: any[]): T;\n}\n\n// A helper for `ReadonlyKeys` & `WritableKeys`\n// This potentially abuses compiler some inconsistencies in checking type equality for generics,\n// because normally `readonly` doesn't affect whether types are assignable.\n// @see https://stackoverflow.com/a/52473108/1815209 with comments\ntype IsEqualConsideringWritability<X, Y> = (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2\n  ? true\n  : false;\n\n// This also probably uses some inconsistencies -- even though it _should_ be the same to just use\n// `T, Writable<T>` for generic arguments, it stops working then, always evaluating to `false`.\n// Swapping `Writable` to `Readable` always returns false too, instead of yielding opposite results.\ntype IsFullyWritable<T extends object> = IsEqualConsideringWritability<\n  { [Q in keyof T]: T[Q] },\n  Writable<{ [Q in keyof T]: T[Q] }>\n>;\n\n/** Gets keys of an object which are readonly */\nexport type ReadonlyKeys<T extends object> = {\n  [P in keyof T]-?: IsFullyWritable<Pick<T, P>> extends true ? never : P;\n}[keyof T];\n\n/** Gets keys of an object which are writable */\nexport type WritableKeys<T extends {}> = {\n  [P in keyof T]-?: IsFullyWritable<Pick<T, P>> extends true ? P : never;\n}[keyof T];\n\n/** Mark some properties which only the former including as optional and set the value to never */\ntype Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n/** get the XOR type which could make 2 types exclude each other */\nexport type XOR<T, U> = T | U extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;\n\n/** Functional programming essentials */\nexport type Head<T extends AnyArray> = T[\"length\"] extends 0 ? never : T[0];\nexport type Tail<T extends AnyArray> = T[\"length\"] extends 0\n  ? never\n  : ((...t: T) => void) extends (first: any, ...rest: infer Rest) => void\n  ? Rest\n  : never;\n\nexport type Exact<T, SHAPE> = T extends SHAPE ? (Exclude<keyof T, keyof SHAPE> extends never ? T : never) : never;\n"]}